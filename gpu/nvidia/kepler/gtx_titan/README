How to compile:

%========================================
	This benchmark uses two independent 
instructions per thread.
	Each instruction executes N/2 FMAs.
%========================================
Compute benchmark
	Single:
		make computeIlp TYPE=float
	Double:
		make computeIlp TYPE=double
%========================================


%========================================
	N threads copies n pieces of data each 
in strides of N.
	Each data is float4.
%========================================
Bandwidth benchmark
	make bandwidthIlp TYPE=float4
%========================================


%========================================
	It computes a sequence of FMA's over
each word of data loaded to match the 
input intensity I.
%========================================
Intensity benchmark
	Single:
		make intensityIlp TYPE=float4
	Double:
		make intensityDbl TYPE=double
%========================================


%========================================
	This benchmark tests the L2 cache
bandwidth for Kepler GPUs.
	Since the L1 cache is reserved for spills
on Keplers (unlike Fermi which caches data
in L1 as well), even if the dataset size
is made small enough to fit in the L1 cache,
data will still come from L2.
	This benchmark uses a simple pointer chaser 
to implement the memory reads to minimize 
redundant computation.
%========================================
Cache benchmark
	make cachetest
%========================================

%========================================
	This benchmark tests the shared memory
bandwidth for NVIDIA GPUs.
	This benchmark uses a simple pointer chaser 
to implement the memory reads to minimize 
redundant computation.
%========================================
Shared memory benchmark
	make smtest
%========================================

%========================================
	This benchmark tests the random memory
access performance.
	This benchmark uses a random pointer chaser 
to implement the memory reads.
%========================================
Shared memory benchmark
	make gpurand 
%========================================
