/*
MIT License
Copyright 2020 Jee W. Choi, Marat Dukhan, and Xing Liu
Permission is hereby granted, free of charge, to any person obtaining a copy of 
this software and associated documentation files (the "Software"), to deal in 
the Software without restriction, including without limitation the rights to use, 
copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the 
Software, and to permit persons to whom the Software is furnished to do so, subject 
to the following conditions:
The above copyright notice and this permission notice shall be included in all 
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

How to compile:

%========================================
Intensity benchmark
	Single:
		make single MAD_PER_ELEMENT=<M> 
	Double:
		make double MAD_PER_ELEMENT=<M>
%========================================

How to execute:
./single <Data size (in Bytes)> <intensity>

1) For a given "POLYNOMAIL_POWER"=N, for each word of data, the kernel does 2 * N Flops (N sequences of ADD and MUL).
2) For "Data size"=M, there are M/sizeof(data type) elements in the input array, where data type could be single or double.
3) For the input "intensity", the value should match the value given for "POLYNOMIAL_POWER". For example, in the case of "POLYNOMIAL_POWER"=2 for single precision benchmark, "intensity" should be (2*2) flops / (4) bytes = 1. 
This value is only used to compute performance numbers, and does not actually change how the kernel is executed.
4) Note that the results are discarded after computation, so there is only read from memory, but no writes back to the memory.


