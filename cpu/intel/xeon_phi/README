/*
MIT License
Copyright 2020 Jee W. Choi, Marat Dukhan, and Xing Liu
Permission is hereby granted, free of charge, to any person obtaining a copy of 
this software and associated documentation files (the "Software"), to deal in 
the Software without restriction, including without limitation the rights to use, 
copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the 
Software, and to permit persons to whom the Software is furnished to do so, subject 
to the following conditions:
The above copyright notice and this permission notice shall be included in all 
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

How to compile:

%========================================
Intensity benchmark
	Single:
		make N=<n> PRECISION=sp
	Double:
		make N=<n> PRECISION=dp
%========================================

How to execute:
./benchsp5 240

1) In order to change the input array size, change SIZEPERTHREAD in bench.c
2) In order to get accurate timing and performance information, make sure 
   CPUFREQ in bench.c matches the system's clock.
3) Arithmetic intensity is calculate as (2 * n / sizeof (data type)).
4) Supported N values are 1-20, 25, 30, 35, 40, 50, 60, ..., 300. 
5) Recommended thread number is 4 * (# compute cores), since it is 4-way 
	 hardware multi-threaded.
6) Make sure libiomp5.so is available on the Phi.
